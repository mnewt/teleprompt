#!/usr/bin/env bash

upsearch () {
  local directory="$PWD"
  while [ -n "$directory" ]; do
    if [ -e "$directory/$1" ]; then
      printf "$directory/$1"
      return 0
    fi
    directory=${directory%/*}
  done
  return 1
}

filter () {
  local m=$1
  shift
  for s in "$@"; do
    [[ $s =~ $m ]] && echo $s
  done
}

# Based on (https://stackoverflow.com/a/22539067)
re_match () {
  local ec
  unset -v re_match # initialize output variable
  [[ $1 =~ $2 ]] # perform the regex test
  ec=$? # save exit code
  if [[ $ec -eq 0 ]]; then # copy result to output variable
    [[ -n $BASH_VERSION ]] && re_match=( "${BASH_REMATCH[@]}" )
    [[ -n $ZSH_VERSION ]]  && re_match=( "${match[@]}" )
  fi
  return $ec
}

count_lines () {
  IFS=$'\n'
  set -f
  set -- $1
  echo $#
}

# Print a string with ANSI X3.64 colors
# Color formats:
# * 8 color (30-37 for foreground and 40-37 for background), e.g. '31'
# * 256 color (000-255 -- must use 3 digits with leading zeros), e.g. '001'
# * 24 bit color, e.g. RGB: 255;255;255, or hex: FFFFFF
# * Anything else is processed as a raw ANSI escape code and passed directly to \e[<arg>m
with_color () {
  # $1: background color
  # $2: foreground color
  # remaining args: string to print

  local bg="$1"
  local fg="$2"
  shift 2

  case ${#bg} in
    3)   bg="48;5;$bg"
         fg="38;5;$fg"
         ;;
    6)   bg="$(printf "48;2;%d;%d;%d" "0x${bg:0:2}" "0x${bg:2:2}" "0x${bg:4:2}")"
         fg="$(printf "38;2;%d;%d;%d" "0x${fg:0:2}" "0x${fg:2:2}" "0x${fg:4:2}")"
         ;;
    11)  bg="$(printf "48;2;%d;%d;%d" ${bg:0:3} ${bg:4:3} ${bg:8:3})"
         fg="$(printf "38;2;%d;%d;%d" ${fg:0:3} ${fg:4:3} ${fg:8:3})"
  esac

  printf "\033[${bg}m\033[${fg}m%s\033[0m" "$@"
}
